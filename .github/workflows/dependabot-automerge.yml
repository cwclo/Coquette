name: Auto-merge Dependabot PRs

on:
  pull_request:
    types:
      - labeled
      - synchronize
      - opened
      - ready_for_review

permissions:
  pull-requests: write
  contents: write
  statuses: read
  checks: read

jobs:
  automerge:
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/github-script@v7
        with:
          retries: 3
          script: |
            async function wait(ms) {
              return new Promise(resolve => setTimeout(resolve, ms));
            }

            async function checkAndMerge() {
              let attempts = 3;
              let delay = 10000; // 10 seconds

              for (let i = 1; i <= attempts; i++) {
                const pr = await github.rest.pulls.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.payload.pull_request.number
                });

                const { mergeable, mergeable_state, number: prNumber, head } = pr.data;

                console.log(`Attempt ${i}:`);
                console.log("Mergeable:", mergeable);
                console.log("Mergeable State:", mergeable_state);

                const status = await github.rest.repos.getCombinedStatusForRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: head.sha
                });

                const allChecksPass = status.data.state === "success";
                console.log("Status checks state:", status.data.state);
                status.data.statuses.forEach(s => {
                  console.log(`• ${s.context}: ${s.state}`);
                });

                if (mergeable && mergeable_state === "clean" && allChecksPass) {
                  await github.rest.pulls.merge({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: prNumber,
                    merge_method: "squash"
                  });
                  console.log("✅ PR auto-merged.");
                  return;
                }

                if (i < attempts) {
                  console.log(`⏳ Not ready yet. Waiting ${delay / 1000}s before retrying...`);
                  await wait(delay);
                }
              }

              console.log("⛔️ Not safe to merge after retries.");
            }

            await checkAndMerge();
